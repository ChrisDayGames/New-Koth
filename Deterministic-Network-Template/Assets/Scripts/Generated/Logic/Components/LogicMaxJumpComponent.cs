//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LogicEntity {

    public MaxJump maxJump { get { return (MaxJump)GetComponent(LogicComponentsLookup.MaxJump); } }
    public bool hasMaxJump { get { return HasComponent(LogicComponentsLookup.MaxJump); } }

    public void AddMaxJump(long newValue) {
        var index = LogicComponentsLookup.MaxJump;
        var component = CreateComponent<MaxJump>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMaxJump(long newValue) {
        var index = LogicComponentsLookup.MaxJump;
        var component = CreateComponent<MaxJump>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMaxJump() {
        RemoveComponent(LogicComponentsLookup.MaxJump);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LogicMatcher {

    static Entitas.IMatcher<LogicEntity> _matcherMaxJump;

    public static Entitas.IMatcher<LogicEntity> MaxJump {
        get {
            if (_matcherMaxJump == null) {
                var matcher = (Entitas.Matcher<LogicEntity>)Entitas.Matcher<LogicEntity>.AllOf(LogicComponentsLookup.MaxJump);
                matcher.componentNames = LogicComponentsLookup.componentNames;
                _matcherMaxJump = matcher;
            }

            return _matcherMaxJump;
        }
    }
}

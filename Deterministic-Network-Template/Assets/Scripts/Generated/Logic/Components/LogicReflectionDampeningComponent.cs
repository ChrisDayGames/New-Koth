//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LogicEntity {

    public ReflectionDampeningComponent reflectionDampening { get { return (ReflectionDampeningComponent)GetComponent(LogicComponentsLookup.ReflectionDampening); } }
    public bool hasReflectionDampening { get { return HasComponent(LogicComponentsLookup.ReflectionDampening); } }

    public void AddReflectionDampening(long newXDampening, long newYDampening) {
        var index = LogicComponentsLookup.ReflectionDampening;
        var component = CreateComponent<ReflectionDampeningComponent>(index);
        component.xDampening = newXDampening;
        component.yDampening = newYDampening;
        AddComponent(index, component);
    }

    public void ReplaceReflectionDampening(long newXDampening, long newYDampening) {
        var index = LogicComponentsLookup.ReflectionDampening;
        var component = CreateComponent<ReflectionDampeningComponent>(index);
        component.xDampening = newXDampening;
        component.yDampening = newYDampening;
        ReplaceComponent(index, component);
    }

    public void RemoveReflectionDampening() {
        RemoveComponent(LogicComponentsLookup.ReflectionDampening);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LogicMatcher {

    static Entitas.IMatcher<LogicEntity> _matcherReflectionDampening;

    public static Entitas.IMatcher<LogicEntity> ReflectionDampening {
        get {
            if (_matcherReflectionDampening == null) {
                var matcher = (Entitas.Matcher<LogicEntity>)Entitas.Matcher<LogicEntity>.AllOf(LogicComponentsLookup.ReflectionDampening);
                matcher.componentNames = LogicComponentsLookup.componentNames;
                _matcherReflectionDampening = matcher;
            }

            return _matcherReflectionDampening;
        }
    }
}

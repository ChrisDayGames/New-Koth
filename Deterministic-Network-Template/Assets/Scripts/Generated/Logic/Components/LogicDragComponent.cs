//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LogicEntity {

    public DragComponent drag { get { return (DragComponent)GetComponent(LogicComponentsLookup.Drag); } }
    public bool hasDrag { get { return HasComponent(LogicComponentsLookup.Drag); } }

    public void AddDrag(long newDrag, long newDangerousDrag) {
        var index = LogicComponentsLookup.Drag;
        var component = CreateComponent<DragComponent>(index);
        component.drag = newDrag;
        component.dangerousDrag = newDangerousDrag;
        AddComponent(index, component);
    }

    public void ReplaceDrag(long newDrag, long newDangerousDrag) {
        var index = LogicComponentsLookup.Drag;
        var component = CreateComponent<DragComponent>(index);
        component.drag = newDrag;
        component.dangerousDrag = newDangerousDrag;
        ReplaceComponent(index, component);
    }

    public void RemoveDrag() {
        RemoveComponent(LogicComponentsLookup.Drag);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LogicMatcher {

    static Entitas.IMatcher<LogicEntity> _matcherDrag;

    public static Entitas.IMatcher<LogicEntity> Drag {
        get {
            if (_matcherDrag == null) {
                var matcher = (Entitas.Matcher<LogicEntity>)Entitas.Matcher<LogicEntity>.AllOf(LogicComponentsLookup.Drag);
                matcher.componentNames = LogicComponentsLookup.componentNames;
                _matcherDrag = matcher;
            }

            return _matcherDrag;
        }
    }
}

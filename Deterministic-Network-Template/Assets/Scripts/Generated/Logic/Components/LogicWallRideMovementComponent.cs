//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LogicEntity {

    public WallRideMovementComponent wallRideMovement { get { return (WallRideMovementComponent)GetComponent(LogicComponentsLookup.WallRideMovement); } }
    public bool hasWallRideMovement { get { return HasComponent(LogicComponentsLookup.WallRideMovement); } }

    public void AddWallRideMovement(long newFallSpeed, long newFastFallFactor, Determinism.FixedVector2 newInnerJumpVelocity, Determinism.FixedVector2 newNeutralJumpVelocity, Determinism.FixedVector2 newOuterJumpVelocity, long newAccelerationTime, long newJumpLenth, long newStickTime) {
        var index = LogicComponentsLookup.WallRideMovement;
        var component = CreateComponent<WallRideMovementComponent>(index);
        component.fallSpeed = newFallSpeed;
        component.fastFallFactor = newFastFallFactor;
        component.innerJumpVelocity = newInnerJumpVelocity;
        component.neutralJumpVelocity = newNeutralJumpVelocity;
        component.outerJumpVelocity = newOuterJumpVelocity;
        component.accelerationTime = newAccelerationTime;
        component.jumpLenth = newJumpLenth;
        component.stickTime = newStickTime;
        AddComponent(index, component);
    }

    public void ReplaceWallRideMovement(long newFallSpeed, long newFastFallFactor, Determinism.FixedVector2 newInnerJumpVelocity, Determinism.FixedVector2 newNeutralJumpVelocity, Determinism.FixedVector2 newOuterJumpVelocity, long newAccelerationTime, long newJumpLenth, long newStickTime) {
        var index = LogicComponentsLookup.WallRideMovement;
        var component = CreateComponent<WallRideMovementComponent>(index);
        component.fallSpeed = newFallSpeed;
        component.fastFallFactor = newFastFallFactor;
        component.innerJumpVelocity = newInnerJumpVelocity;
        component.neutralJumpVelocity = newNeutralJumpVelocity;
        component.outerJumpVelocity = newOuterJumpVelocity;
        component.accelerationTime = newAccelerationTime;
        component.jumpLenth = newJumpLenth;
        component.stickTime = newStickTime;
        ReplaceComponent(index, component);
    }

    public void RemoveWallRideMovement() {
        RemoveComponent(LogicComponentsLookup.WallRideMovement);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LogicMatcher {

    static Entitas.IMatcher<LogicEntity> _matcherWallRideMovement;

    public static Entitas.IMatcher<LogicEntity> WallRideMovement {
        get {
            if (_matcherWallRideMovement == null) {
                var matcher = (Entitas.Matcher<LogicEntity>)Entitas.Matcher<LogicEntity>.AllOf(LogicComponentsLookup.WallRideMovement);
                matcher.componentNames = LogicComponentsLookup.componentNames;
                _matcherWallRideMovement = matcher;
            }

            return _matcherWallRideMovement;
        }
    }
}

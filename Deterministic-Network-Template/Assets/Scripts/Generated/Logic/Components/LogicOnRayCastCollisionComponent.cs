//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LogicEntity {

    public OnRayCastCollisionComponent onRayCastCollision { get { return (OnRayCastCollisionComponent)GetComponent(LogicComponentsLookup.OnRayCastCollision); } }
    public bool hasOnRayCastCollision { get { return HasComponent(LogicComponentsLookup.OnRayCastCollision); } }

    public void AddOnRayCastCollision(CommandInput.RayCastCollisionCommand newFunction) {
        var index = LogicComponentsLookup.OnRayCastCollision;
        var component = CreateComponent<OnRayCastCollisionComponent>(index);
        component.function = newFunction;
        AddComponent(index, component);
    }

    public void ReplaceOnRayCastCollision(CommandInput.RayCastCollisionCommand newFunction) {
        var index = LogicComponentsLookup.OnRayCastCollision;
        var component = CreateComponent<OnRayCastCollisionComponent>(index);
        component.function = newFunction;
        ReplaceComponent(index, component);
    }

    public void RemoveOnRayCastCollision() {
        RemoveComponent(LogicComponentsLookup.OnRayCastCollision);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LogicMatcher {

    static Entitas.IMatcher<LogicEntity> _matcherOnRayCastCollision;

    public static Entitas.IMatcher<LogicEntity> OnRayCastCollision {
        get {
            if (_matcherOnRayCastCollision == null) {
                var matcher = (Entitas.Matcher<LogicEntity>)Entitas.Matcher<LogicEntity>.AllOf(LogicComponentsLookup.OnRayCastCollision);
                matcher.componentNames = LogicComponentsLookup.componentNames;
                _matcherOnRayCastCollision = matcher;
            }

            return _matcherOnRayCastCollision;
        }
    }
}

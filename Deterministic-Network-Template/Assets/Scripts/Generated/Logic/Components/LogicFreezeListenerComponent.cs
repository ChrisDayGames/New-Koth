//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LogicEntity {

    public FreezeListenerComponent freezeListener { get { return (FreezeListenerComponent)GetComponent(LogicComponentsLookup.FreezeListener); } }
    public bool hasFreezeListener { get { return HasComponent(LogicComponentsLookup.FreezeListener); } }

    public void AddFreezeListener(System.Collections.Generic.List<IFreezeListener> newValue) {
        var index = LogicComponentsLookup.FreezeListener;
        var component = CreateComponent<FreezeListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFreezeListener(System.Collections.Generic.List<IFreezeListener> newValue) {
        var index = LogicComponentsLookup.FreezeListener;
        var component = CreateComponent<FreezeListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFreezeListener() {
        RemoveComponent(LogicComponentsLookup.FreezeListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LogicMatcher {

    static Entitas.IMatcher<LogicEntity> _matcherFreezeListener;

    public static Entitas.IMatcher<LogicEntity> FreezeListener {
        get {
            if (_matcherFreezeListener == null) {
                var matcher = (Entitas.Matcher<LogicEntity>)Entitas.Matcher<LogicEntity>.AllOf(LogicComponentsLookup.FreezeListener);
                matcher.componentNames = LogicComponentsLookup.componentNames;
                _matcherFreezeListener = matcher;
            }

            return _matcherFreezeListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LogicEntity {

    public void AddFreezeListener(IFreezeListener value) {
        var listeners = hasFreezeListener
            ? freezeListener.value
            : new System.Collections.Generic.List<IFreezeListener>();
        listeners.Add(value);
        ReplaceFreezeListener(listeners);
    }

    public void RemoveFreezeListener(IFreezeListener value, bool removeComponentWhenEmpty = true) {
        var listeners = freezeListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveFreezeListener();
        } else {
            ReplaceFreezeListener(listeners);
        }
    }
}

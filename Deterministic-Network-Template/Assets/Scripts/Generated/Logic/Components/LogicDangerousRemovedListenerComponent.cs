//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LogicEntity {

    public DangerousRemovedListenerComponent dangerousRemovedListener { get { return (DangerousRemovedListenerComponent)GetComponent(LogicComponentsLookup.DangerousRemovedListener); } }
    public bool hasDangerousRemovedListener { get { return HasComponent(LogicComponentsLookup.DangerousRemovedListener); } }

    public void AddDangerousRemovedListener(System.Collections.Generic.List<IDangerousRemovedListener> newValue) {
        var index = LogicComponentsLookup.DangerousRemovedListener;
        var component = CreateComponent<DangerousRemovedListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDangerousRemovedListener(System.Collections.Generic.List<IDangerousRemovedListener> newValue) {
        var index = LogicComponentsLookup.DangerousRemovedListener;
        var component = CreateComponent<DangerousRemovedListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDangerousRemovedListener() {
        RemoveComponent(LogicComponentsLookup.DangerousRemovedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LogicMatcher {

    static Entitas.IMatcher<LogicEntity> _matcherDangerousRemovedListener;

    public static Entitas.IMatcher<LogicEntity> DangerousRemovedListener {
        get {
            if (_matcherDangerousRemovedListener == null) {
                var matcher = (Entitas.Matcher<LogicEntity>)Entitas.Matcher<LogicEntity>.AllOf(LogicComponentsLookup.DangerousRemovedListener);
                matcher.componentNames = LogicComponentsLookup.componentNames;
                _matcherDangerousRemovedListener = matcher;
            }

            return _matcherDangerousRemovedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LogicEntity {

    public void AddDangerousRemovedListener(IDangerousRemovedListener value) {
        var listeners = hasDangerousRemovedListener
            ? dangerousRemovedListener.value
            : new System.Collections.Generic.List<IDangerousRemovedListener>();
        listeners.Add(value);
        ReplaceDangerousRemovedListener(listeners);
    }

    public void RemoveDangerousRemovedListener(IDangerousRemovedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = dangerousRemovedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveDangerousRemovedListener();
        } else {
            ReplaceDangerousRemovedListener(listeners);
        }
    }
}

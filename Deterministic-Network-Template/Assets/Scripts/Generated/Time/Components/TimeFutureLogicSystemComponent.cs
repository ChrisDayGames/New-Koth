//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeContext {

    public TimeEntity futureLogicSystemEntity { get { return GetGroup(TimeMatcher.FutureLogicSystem).GetSingleEntity(); } }
    public FutureLogicSystemComponent futureLogicSystem { get { return futureLogicSystemEntity.futureLogicSystem; } }
    public bool hasFutureLogicSystem { get { return futureLogicSystemEntity != null; } }

    public TimeEntity SetFutureLogicSystem(Entitas.Systems newSystem) {
        if (hasFutureLogicSystem) {
            throw new Entitas.EntitasException("Could not set FutureLogicSystem!\n" + this + " already has an entity with FutureLogicSystemComponent!",
                "You should check if the context already has a futureLogicSystemEntity before setting it or use context.ReplaceFutureLogicSystem().");
        }
        var entity = CreateEntity();
        entity.AddFutureLogicSystem(newSystem);
        return entity;
    }

    public void ReplaceFutureLogicSystem(Entitas.Systems newSystem) {
        var entity = futureLogicSystemEntity;
        if (entity == null) {
            entity = SetFutureLogicSystem(newSystem);
        } else {
            entity.ReplaceFutureLogicSystem(newSystem);
        }
    }

    public void RemoveFutureLogicSystem() {
        futureLogicSystemEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TimeEntity {

    public FutureLogicSystemComponent futureLogicSystem { get { return (FutureLogicSystemComponent)GetComponent(TimeComponentsLookup.FutureLogicSystem); } }
    public bool hasFutureLogicSystem { get { return HasComponent(TimeComponentsLookup.FutureLogicSystem); } }

    public void AddFutureLogicSystem(Entitas.Systems newSystem) {
        var index = TimeComponentsLookup.FutureLogicSystem;
        var component = CreateComponent<FutureLogicSystemComponent>(index);
        component.system = newSystem;
        AddComponent(index, component);
    }

    public void ReplaceFutureLogicSystem(Entitas.Systems newSystem) {
        var index = TimeComponentsLookup.FutureLogicSystem;
        var component = CreateComponent<FutureLogicSystemComponent>(index);
        component.system = newSystem;
        ReplaceComponent(index, component);
    }

    public void RemoveFutureLogicSystem() {
        RemoveComponent(TimeComponentsLookup.FutureLogicSystem);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TimeMatcher {

    static Entitas.IMatcher<TimeEntity> _matcherFutureLogicSystem;

    public static Entitas.IMatcher<TimeEntity> FutureLogicSystem {
        get {
            if (_matcherFutureLogicSystem == null) {
                var matcher = (Entitas.Matcher<TimeEntity>)Entitas.Matcher<TimeEntity>.AllOf(TimeComponentsLookup.FutureLogicSystem);
                matcher.componentNames = TimeComponentsLookup.componentNames;
                _matcherFutureLogicSystem = matcher;
            }

            return _matcherFutureLogicSystem;
        }
    }
}
